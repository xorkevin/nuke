/* normalize */
input,
textarea,
select,
option {
  font-size: unset;
  font-family: unset;
  line-height: $typography-line-height;

  &:disabled {
    cursor: not-allowed;
  }
}

.formfield {
  width: $form-width;
  max-width: 100%;
  margin: 8px 0;

  &.wide {
    width: $form-width-wide;
  }

  &.full-width {
    width: 100%;
  }
}

.formfield {
  &.disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  & > .hint {
    font-size: 0.85rem;
    padding: 4px 8px 0;
    color: $color-text-dark-2;

    &.error {
      color: $color-danger;
    }

    &:not(.no-hint) > .left:before {
      content: '';
      display: inline-block;
      height: 1em;
      visibility: hidden;
    }
  }
}

.dark .formfield {
  & > .hint {
    color: $color-text-light-2;

    &.error {
      color: $color-danger-light;
    }
  }
}

/* normal */
.formfield {
  & > .field-row > .field > input.normal {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    background: transparent;
    outline: none;
    color: unset;
    cursor: text;

    display: block;
    width: 100%;
    height: 3em;
    padding: 1px 8px;
    border-radius: 4px;
    border: 1px solid $color-back-dark-3;
    box-shadow: inset 0 1px 2px 0 $color-back-dark-3, 0 0 0 2px transparent;
    transition: $transition-normal;

    &:disabled {
      cursor: not-allowed;
    }
  }

  & > .field-row > .icon.left {
    padding-right: 4px;
  }

  & > .field-row > .icon.right {
    padding-left: 4px;
  }

  &.error > .field-row > .field > input.normal {
    border-color: $color-danger-light;
  }

  &.valid > .field-row > .field > input.normal {
    border-color: $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > .field-row > .field > input.normal {
      border-color: $color-back-primary;
      box-shadow: inset 0 1px 1px 0 $color-back-dark-3,
        0 0 0 2px $color-back-primary-2;
    }
  }
}

.dark .formfield {
  & > .field-row > .field > input.normal {
    border-color: $color-back-light-3;
    box-shadow: inset 0 1px 2px 0 $color-back-light-3, 0 0 0 2px transparent;
  }

  &.error > .field-row > .field > input.normal {
    border-color: $color-danger-light;
  }

  &.valid > .field-row > .field > input.normal {
    border-color: $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > .field-row > .field > input.normal {
      border-color: $color-back-primary;
      box-shadow: inset 0 1px 1px 0 $color-back-light-3,
        0 0 0 2px $color-back-primary-2;
    }
  }
}

.formfield.normal {
  & > label {
    display: block;
    width: 100%;
    padding: 0 8px 4px;
    color: $color-text-dark-2;
    font-weight: 700;
    transition: $transition-normal;
  }
}

.dark .formfield.normal {
  & > label {
    color: $color-text-light-2;
  }
}

/* textarea */
.formfield.textarea {
  & > label {
    display: block;
    width: 100%;
    padding: 0 8px 4px;
    color: $color-text-dark-2;
    font-weight: 700;
    transition: $transition-normal;
  }

  & > .field-row > .field > textarea {
    background: transparent;
    outline: none;
    color: unset;
    cursor: text;

    display: block;
    width: 100%;
    padding: 8px;
    border-radius: 4px;
    border: 1px solid $color-back-dark-3;
    box-shadow: inset 0 1px 2px 0 $color-back-dark-3, 0 0 0 2px transparent;
    transition: border-color $transition-normal, box-shadow $transition-normal;
    resize: vertical;

    &:disabled {
      cursor: not-allowed;
    }
  }

  & > .field-row > .icon.left {
    padding-right: 4px;
  }

  & > .field-row > .icon.right {
    padding-left: 4px;
  }

  &.error > .field-row > .field > textarea {
    border-color: $color-danger-light;
  }

  &.valid > .field-row > .field > textarea {
    border-color: $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > .field-row > .field > textarea {
      border-color: $color-back-primary;
      box-shadow: inset 0 1px 1px 0 $color-back-dark-3,
        0 0 0 2px $color-back-primary-2;
    }
  }
}

.dark .formfield.textarea {
  & > label {
    color: $color-text-light-2;
  }

  & > .field-row > .field > textarea {
    border-color: $color-back-light-3;
    box-shadow: inset 0 1px 2px 0 $color-back-light-3, 0 0 0 2px transparent;
  }

  &.error > .field-row > .field > textarea {
    border-color: $color-danger-light;
  }

  &.valid > .field-row > .field > textarea {
    border-color: $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > .field-row > .field > textarea {
      border-color: $color-back-primary;
      box-shadow: inset 0 1px 1px 0 $color-back-light-3,
        0 0 0 2px $color-back-primary-2;
    }
  }
}

/* checkbox */
.formfield.checkbox {
  & > input[type='checkbox'] {
    outline: none;

    vertical-align: middle;
    margin-right: 8px;
    border-radius: 4px;
    box-shadow: 0 0 0 1px transparent, 0 0 0 3px transparent;
    transition: $transition-normal;
  }

  & > label {
    vertical-align: middle;
  }

  &.error > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-danger-light;
  }

  &.valid > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > input[type='checkbox'] {
      box-shadow: 0 0 0 1px $color-back-primary, 0 0 0 3px $color-back-primary-2;
    }
  }
}

.dark .formfield.checkbox {
  &.error > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-danger-light;
  }

  &.valid > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > input[type='checkbox'] {
      box-shadow: 0 0 0 1px $color-back-primary, 0 0 0 3px $color-back-primary-2;
    }
  }
}

/* toggle */
.formfield.toggle {
  & > input[type='checkbox'] {
    outline: none;

    vertical-align: middle;
    margin-right: 8px;
    border-radius: 4px;
    box-shadow: 0 0 0 1px transparent, 0 0 0 3px transparent;
    transition: $transition-normal;
  }

  & > label {
    vertical-align: middle;
  }

  &.error > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-danger-light;
  }

  &.valid > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > input[type='checkbox'] {
      box-shadow: 0 0 0 1px $color-back-primary, 0 0 0 3px $color-back-primary-2;
    }
  }
}

.dark .formfield.toggle {
  &.error > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-danger-light;
  }

  &.valid > input[type='checkbox'] {
    box-shadow: 0 0 0 1px $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > input[type='checkbox'] {
      box-shadow: 0 0 0 1px $color-back-primary, 0 0 0 3px $color-back-primary-2;
    }
  }
}

/* switch */
.formfield.toggle.switch {
  & > input[type='checkbox'] {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    display: inline-block;
    width: 3em;
    height: 1.5em;
    border-radius: 1.5em;
    padding: 2px;
    position: relative;
    background-color: $color-back-dark-3;
    transition: $transition-normal;

    &:after {
      content: '';
      display: block;
      width: 50%;
      height: 100%;
      border-radius: 50%;
      position: relative;
      top: 0;
      left: 0;
      background-color: $color-back-light-1;
      transition: $transition-normal;
    }

    &:checked {
      background-color: $color-primary-2;

      &:after {
        left: 50%;
      }
    }
  }

  &.success > input[type='checkbox']:checked {
    background-color: $color-success-light;
  }

  &.danger > input[type='checkbox']:checked {
    background-color: $color-danger-light;
  }
}

.dark .formfield.switch {
  & > input[type='checkbox'] {
    background-color: $color-back-light-3;

    &:after {
      background-color: $color-text-light-1;
    }

    &:checked {
      background-color: $color-primary-2;
    }
  }

  &.success > input[type='checkbox']:checked {
    background-color: $color-success-light;
  }

  &.danger > input[type='checkbox']:checked {
    background-color: $color-danger-light;
  }
}

/* radio */
.formfield.radio {
  & > input[type='radio'] {
    outline: none;

    vertical-align: middle;
    margin-right: 8px;
    border-radius: 50%;
    box-shadow: 0 0 0 1px transparent, 0 0 0 3px transparent;
    transition: $transition-normal;
  }

  & > label {
    vertical-align: middle;
  }

  &.error > input[type='radio'] {
    box-shadow: 0 0 0 1px $color-danger-light;
  }

  &.valid > input[type='radio'] {
    box-shadow: 0 0 0 1px $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > input[type='radio'] {
      box-shadow: 0 0 0 1px $color-back-primary, 0 0 0 3px $color-back-primary-2;
    }
  }
}

.dark .formfield.radio {
  &.error > input[type='radio'] {
    box-shadow: 0 0 0 1px $color-danger-light;
  }

  &.valid > input[type='radio'] {
    box-shadow: 0 0 0 1px $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > input[type='radio'] {
      box-shadow: 0 0 0 1px $color-back-primary, 0 0 0 3px $color-back-primary-2;
    }
  }
}

/* file */
.formfield.file {
  & > .label {
    width: 100%;
    padding: 0 8px 4px;
    color: $color-text-dark-2;
    font-weight: 700;
    transition: $transition-normal;
  }

  & > label {
    display: inline-block;
    cursor: pointer;
  }

  & > input[type='file'] {
    display: none;
  }

  & > .filelist {
    margin: 8px 0;

    .file-field-item-name {
      min-width: 0;
    }
  }
}

.dark .formfield.file {
  & > .label {
    color: $color-text-light-2;
  }
}

/* select */
.formfield.select {
  & > label {
    display: block;
    width: 100%;
    padding: 0 8px 4px;
    color: $color-text-dark-2;
    font-weight: 700;
    transition: $transition-normal;
  }

  & > .field-row > .field {
    position: relative;

    & > select {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      outline: none;
      background: transparent;
      color: unset;

      display: block;
      width: 100%;
      height: 3em;
      padding: 1px 8px;
      border-radius: 4px;
      border: 1px solid $color-back-dark-2;
      box-shadow: 0 0 0 2px transparent;
      transition: $transition-normal;

      & ~ .arrow {
        content: '';
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 6px 6px 0 6px;
        border-color: transparent;
        border-top-color: $color-back-dark-2;
        pointer-events: none;
      }

      & > option {
        -moz-appearance: none;
        -webkit-appearance: none;
        appearance: none;
        color: $color-text-dark-1;
      }
    }
  }

  & > .field-row > .icon.left {
    padding-right: 4px;
  }

  & > .field-row > .icon.right {
    padding-left: 4px;
  }

  &.error > .field-row > .field > select {
    border-color: $color-danger-light;
  }

  &.valid > .field-row > .field > select {
    border-color: $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > .field-row > .field > select {
      border-color: $color-back-primary;
      box-shadow: 0 0 0 2px $color-back-primary-2;
    }
  }
}

.dark .formfield.select {
  & > label {
    color: $color-text-light-2;
  }

  & > .field-row > .field > select {
    border-color: $color-back-light-2;

    & ~ .arrow {
      border-top-color: $color-back-light-2;
    }
  }

  &.error > .field-row > .field > select {
    border-color: $color-danger-light;
  }

  &.valid > .field-row > .field > select {
    border-color: $color-success-light;
  }

  &:focus-within,
  &.error:focus-within,
  &.valid:focus-within {
    & > .field-row > .field > select {
      border-color: $color-back-primary;
      box-shadow: 0 0 0 2px $color-back-primary-2;
    }
  }
}

/* suggest */
.formfield.suggest {
  & > label {
    display: block;
    width: 100%;
    padding: 0 8px 4px;
    color: $color-text-dark-2;
    font-weight: 700;
    transition: $transition-normal;
  }
}

.dark .formfield.suggest {
  & > label {
    color: $color-text-light-2;
  }
}

.field-suggest-options {
  // width just set as a default, overridden by react component style
  width: $form-width;
  max-width: 100vw;
  max-height: $form-popover-max-height;
  overflow: auto;
  background-color: $white;
  border-radius: 4px;
  @include shadow-box(16px);

  & > .option {
    width: 100%;
    border-radius: 4px;
    padding: 8px 16px;
    transition: $transition-fast;
    cursor: pointer;

    &:hover {
      background-color: $color-back-primary-3;
    }
  }
}

.dark .field-suggest-options {
  background-color: $color-primary-dark-1;

  & > .option {
    &:hover {
      background-color: $color-back-light-3;
    }
  }
}

/* multiselect */
.formfield.multiselect {
  & > label {
    display: block;
    width: 100%;
    padding: 0 8px 4px;
    color: $color-text-dark-2;
    font-weight: 700;
    transition: $transition-normal;
  }

  & > .value-list {
    padding: 0 0 8px;

    & > .value {
      cursor: pointer;
    }
  }
}

.dark .formfield.multiselect {
  & > label {
    color: $color-text-light-2;
  }
}

.field-multiselect-options {
  // width just set as a default, overridden by react component style
  width: $form-width;
  max-width: 100vw;
  max-height: $form-popover-max-height;
  overflow: auto;
  background-color: $white;
  border-radius: 4px;
  @include shadow-box(16px);

  & > .option {
    width: 100%;
    border-radius: 4px;
    padding: 8px 16px;
    transition: $transition-fast;
    cursor: pointer;

    &:before {
      content: '\2713';
      font-weight: 700;
      margin-right: 8px;
      opacity: 0;
    }

    &.selected {
      color: $color-primary-2;
      background-color: $color-back-primary-3;

      &:before {
        opacity: 1;
      }
    }

    &:hover {
      background-color: $color-back-primary-3;
    }
  }
}

.dark .field-multiselect-options {
  background-color: $color-primary-dark-1;

  & > .option {
    &.selected {
      color: $color-text-light-1;
      background-color: $color-back-light-3;
    }

    &:hover {
      background-color: $color-back-light-3;
    }
  }
}
